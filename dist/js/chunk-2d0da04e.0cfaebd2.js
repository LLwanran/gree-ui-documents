(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0da04e"],{"6a8e":function(e,o,v){"use strict";v.r(o);var c=function(){var e=this,o=e.$createElement;e._self._c;return e._m(0)},t=[function(){var e=this,o=e.$createElement,v=e._self._c||o;return v("div",{staticClass:"markdown-body"},[v("h1",[e._v("Git Commit Message")]),v("blockquote",[v("p",[e._v("commit message 是开发的日常操作，写好 log 不仅有助于他人 review，还可以有效的输出 CHANGELOG，对项目的管理至关重要，但是实际工作中却常常被大家忽略。")]),v("blockquote",[v("p",[e._v("很有意思，平时经常能看到各种提交风格：有用 emoji 的，有用唐诗宋词的，有用随机生成的。风格没有对错，只要能够体现出 commit 所做的修改即可。")])])]),v("hr"),v("blockquote",[v("p",[e._v("实际上，这种东西，当然要借助工具了，才能够写得即规范，又格式化，还能够支持后续分析。\n目前比较建议的是，使用终端工具 "),v("code",{pre:!0},[e._v("commitizen/cz-cli")]),e._v(" + "),v("code",{pre:!0},[e._v("commitizen/cz-conventional-changelog")]),e._v(" + "),v("code",{pre:!0},[e._v("conventional-changelog/standard-version")]),e._v(" 一步解决提交信息和版本发布。")]),v("blockquote",[v("p",[e._v("甚至，如果想更狠一点，在持续集成里面加入 "),v("code",{pre:!0},[e._v("marionebl/commitlint")]),e._v(" 检查 commit 信息是否符合规范，也不是不可以。")])])]),v("h2",{attrs:{id:"commit-message-ge-shi"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#commit-message-ge-shi"}},[e._v("¶")]),e._v(" Commit Message 格式")]),v("p",[e._v("目前规范使用较多的是 "),v("code",{pre:!0},[e._v("Angular")]),e._v(" 团队的规范，继而衍生了 "),v("code",{pre:!0},[e._v("Conventional Commits specification")]),e._v("。很多工具也是基于此规范，它的 message 格式如下：")]),v("pre",{pre:!0,attrs:{class:"hljs"}},[v("code",{pre:!0,attrs:{"v-pre":""}},[e._v("type(<scope>): <Subject> #<github-ref-id>\n\n<body>\n\n<footer>\n")])]),v("p",[e._v("如上这个结构，大致分为三个部分(使用空行分割)：")]),v("ul",[v("li",[v("code",{pre:!0},[e._v("标题行")]),e._v(": 必填，描述主要修改类型和内容")]),v("li",[v("code",{pre:!0},[e._v("主题内容")]),e._v(": 描述为什么修改，做了什么样的修改，以及开发的思路等等")]),v("li",[v("code",{pre:!0},[e._v("页脚注释")]),e._v(": 放 "),v("code",{pre:!0},[e._v("Breaking Changes")]),e._v(" 或 "),v("code",{pre:!0},[e._v("Closed Issues")])])]),v("p",[e._v("分别由如下部分构成:")]),v("ul",[v("li",[v("code",{pre:!0},[e._v("type")]),e._v(": commit 的类型")]),v("li",[v("code",{pre:!0},[e._v("feat")]),e._v(": 新特性")]),v("li",[v("code",{pre:!0},[e._v("fix")]),e._v(": 修改问题")]),v("li",[v("code",{pre:!0},[e._v("refactor")]),e._v(": 代码重构")]),v("li",[v("code",{pre:!0},[e._v("docs")]),e._v(": 文档修改")]),v("li",[v("code",{pre:!0},[e._v("style")]),e._v(": 代码格式修改，注意不是 css 修改")]),v("li",[v("code",{pre:!0},[e._v("test")]),e._v(": 测试用例修改")]),v("li",[v("code",{pre:!0},[e._v("chore")]),e._v(": 其他修改，比如构建流程，依赖管理.")]),v("li",[v("code",{pre:!0},[e._v("scope")]),e._v(": commit 影响的范围，比如：route、component、utils、build…")]),v("li",[v("code",{pre:!0},[e._v("subject")]),e._v(": commit 的概述")]),v("li",[v("code",{pre:!0},[e._v("body")]),e._v(": commit 具体修改内容，可以分为多行")]),v("li",[v("code",{pre:!0},[e._v("footer")]),e._v(": 一些备注, 通常是 BREAKING CHANGE 或修复的 bug 的链接")])]),v("p",[e._v("这样一个符合规范的 "),v("code",{pre:!0},[e._v("commit message")]),e._v("，就好像是一份邮件。（"),v("strong",[e._v("GreeUI 组件库即参照此规范来提交")]),e._v("）")]),v("h3",{attrs:{id:"git-ti-jiao-xiao-xi-gui-ze"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git-ti-jiao-xiao-xi-gui-ze"}},[e._v("¶")]),e._v(" Git 提交消息规则")]),v("ol",[v("li",[e._v("用空行将"),v("code",{pre:!0},[e._v("body")]),e._v("与"),v("code",{pre:!0},[e._v("body")]),e._v("分开")]),v("li",[e._v("将"),v("code",{pre:!0},[e._v("subject")]),e._v("限制为 70 个字符")]),v("li",[v("code",{pre:!0},[e._v("subject")]),e._v("要大写")]),v("li",[v("code",{pre:!0},[e._v("subject")]),e._v("不要以句号结尾")]),v("li",[e._v("在"),v("code",{pre:!0},[e._v("subject")]),e._v("中使用祈使语气")]),v("li",[e._v("用 80 个字符包装"),v("code",{pre:!0},[e._v("body")])]),v("li",[e._v("用 "),v("code",{pre:!0},[e._v("body")]),e._v(" 来解释 what、why、how")])]),v("h2",{attrs:{id:"zong-jie"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#zong-jie"}},[e._v("¶")]),e._v(" 总结")]),v("p",[v("code",{pre:!0},[e._v("commit message")]),e._v(" 的规范性很重要，但是是否需要强制限制，每个团队和个人都有自己的想法，但是个人认为：好的习惯，受益终身。")])])}],i=v("2877"),_={},r=Object(i["a"])(_,c,t,!1,null,null,null);o["default"]=r.exports}}]);